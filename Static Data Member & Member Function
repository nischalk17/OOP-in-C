/* Only one copy is created of static member for all the objects of the class.
Static data member retains its value and is always initialized with 0.
Static member function can access only the static data members.  
A real world scenario where static data member can be used is shown below:
Following eg demonstrates a program that calculates the volume of the boxes 
while also counting the total number of boxes*/


#include<iostream>
using namespace std;
class box
{
	private:
		int length, breadth, height;
		public:
			static int ObjectCount;
			box(int l, int b, int h)		//parameterized constructor
			{
				length=l;
				breadth=b;
				height=h;
				ObjectCount++;			// Increases every time an object is created
			}
			
			void show()				//normal member function
			{
				cout<<"The volume of the boxes are:"<<(length*breadth*height)<<endl;
				
			}
			
			static void display()		//static member function
			{
				cout<<"Total number of boxes are: "<<box::ObjectCount<<endl;
			}
};

int box::ObjectCount=0;			//static member should be initialized by 0

int main()
{
	box b1(5,6,7);
	box b2(8,9,10);
	b1.show();
	b2.show();
	box::display();
	return 0;
}

/* Output:
The volume of the boxes are:210
The volume of the boxes are:720
Total number of boxes are: 2
*/
